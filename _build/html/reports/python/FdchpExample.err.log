Traceback (most recent call last):
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/conda/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jovyan/envs/ooi-data-explorations/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from matplotlib.collections import PathCollection
from matplotlib.legend_handler import HandlerPathCollection, HandlerLine2D
# %matplotlib inline
%matplotlib ipympl

# time_2021_recovered = (ntplib.ntp_to_system_time(ds2021_recovered['fdchp_a_time_L2'].values)).astype('datetime64[s]')
marker_size = 3
legend_marker_size = 20
tick_size = 16

def update(handle, orig):
    handle.update_from(orig)
    handle.set_sizes([legend_marker_size])
    
fig, ax = plt.subplots(figsize=(20, 7))
df_deployment8_calculated = df_deployment8_calculated.sort_values('time', ascending=True)
ax.plot(df_deployment8_calculated['time'], df_deployment8_calculated['uw_momentum_flux'], marker='o',linestyle='solid',markersize=marker_size, color='green', alpha=0.5, label="Computed from Raw")

scatter = ax.plot(telemetered8['time'], telemetered8['uw_momentum_flux'], marker='o',linestyle='solid', color='orange', markersize=marker_size, alpha=0.5, label="Telemetered")
# scatter = ax.scatter(time_2021_recovered, ds2021_recovered['fdchp_a_fluxmom_alongwind'], marker='x', color='purple', s=marker_size, alpha=0.5, label="Recovered")
ax.set_xlabel('Time', fontsize=22)
# ax.set_xlim(np.min(telemetered8['time']), np.max(telemetered8['time']))
ax.set_xlim(np.min(df_deployment8_calculated['time']), np.max(df_deployment8_calculated['time']))
ax.set_ylabel('uw Along-wind momentum flux', fontsize=22)
ax.set_ylim(-1.0, 0.05)
# handles, labels = scatter.legend_elements(prop="sizes", alpha=0.6)
# legend = ax.legend(loc="lower right", fontsize=tick_size, handler_map={PathCollection : HandlerPathCollection(update_func=update)})
legend = ax.legend(loc="lower right", fontsize=tick_size)

plt.xticks(fontsize=tick_size)
plt.yticks(fontsize=tick_size)
plt.title("Deployment 8 Along-Wind Momentum Flux Comparison", fontsize=24)
plt.savefig('deployment8_comparison.png', bbox_inches='tight')
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[11], line 16[0m
[1;32m     13[0m     handle[38;5;241m.[39mset_sizes([legend_marker_size])
[1;32m     15[0m fig, ax [38;5;241m=[39m plt[38;5;241m.[39msubplots(figsize[38;5;241m=[39m([38;5;241m20[39m, [38;5;241m7[39m))
[0;32m---> 16[0m df_deployment8_calculated [38;5;241m=[39m [43mdf_deployment8_calculated[49m[38;5;241m.[39msort_values([38;5;124m'[39m[38;5;124mtime[39m[38;5;124m'[39m, ascending[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m     17[0m ax[38;5;241m.[39mplot(df_deployment8_calculated[[38;5;124m'[39m[38;5;124mtime[39m[38;5;124m'[39m], df_deployment8_calculated[[38;5;124m'[39m[38;5;124muw_momentum_flux[39m[38;5;124m'[39m], marker[38;5;241m=[39m[38;5;124m'[39m[38;5;124mo[39m[38;5;124m'[39m,linestyle[38;5;241m=[39m[38;5;124m'[39m[38;5;124msolid[39m[38;5;124m'[39m,markersize[38;5;241m=[39mmarker_size, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mgreen[39m[38;5;124m'[39m, alpha[38;5;241m=[39m[38;5;241m0.5[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mComputed from Raw[39m[38;5;124m"[39m)
[1;32m     19[0m scatter [38;5;241m=[39m ax[38;5;241m.[39mplot(telemetered8[[38;5;124m'[39m[38;5;124mtime[39m[38;5;124m'[39m], telemetered8[[38;5;124m'[39m[38;5;124muw_momentum_flux[39m[38;5;124m'[39m], marker[38;5;241m=[39m[38;5;124m'[39m[38;5;124mo[39m[38;5;124m'[39m,linestyle[38;5;241m=[39m[38;5;124m'[39m[38;5;124msolid[39m[38;5;124m'[39m, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124morange[39m[38;5;124m'[39m, markersize[38;5;241m=[39mmarker_size, alpha[38;5;241m=[39m[38;5;241m0.5[39m, label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mTelemetered[39m[38;5;124m"[39m)

[0;31mNameError[0m: name 'df_deployment8_calculated' is not defined

